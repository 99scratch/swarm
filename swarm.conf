# Config file for swarm
[Target]
# Target URL, IP address or network segment, 
# separated by blank (eg: baidu.com 127.0.0.0/24 192.168.1.5)
# target=
target=

# File that contains target list, one target per line.
# Either relative path or absolute path can be used.
target_file=


[Swarm]
# Slave hosts which runs swarm-s to complete target task. 
# They should listen on target port to be waken up by giving a shell when request comes.
# if so, set this option with both address and port, separated by blank.
# (eg: 192.168.1.2:13110 192.168.1.3:13111)
# If you don't need to waken slave hosts to run swarm-s, 
# set it without port just like the target and set waken_cmd option to null at the same time.
swarm=

# File that contains slave list, one host per line.
# Either relative path or absolute path can be used.
swarm_file=

# Command to waken up slave hosts, make sure "ARGS" will be argument pass to swarm-s.
# null if swarm-s on slave host need not to be waken up
waken_cmd=python swarm-s.py ARGS

# Seconds to wait before connection to swarm getting response.
timeout=30

# Master address which should be reachable by all slave hosts.
m_addr=192.168.7.25

# Listen port on master host to distribute task.
m_port=13110

# Listen port on slave host to receive command from master.
s_port=9090

# Auth key between master and slave hosts.
authkey=auth

# Synchronize data like dictionary and vulnerability database etc. 
# This option has to be provided if data in local has been updated, 
# or slave host may fail to complete tasks.
sync_data=False


[Output]
# Record log into target file. 
logfile=./swarm.log

# Output more verbose.
verbose=True

# Disable colorful log output.
disable_col=False


[Common]
# Number of process running on slave host.
# Use 0 to use number of cpu cores as process num.
# Task will be decomposed into subtasks and One process will do one subtask at one time.
process_num=0

# Number of threads running on slave host.
# Multiple threads are used when swarm try to run subtask.
thread_num=30


[Domain Scan]
# Do subdomain scan on target.
enable_domain_scan=True

# Use complete brute force without dictionary on target.
# If this option is set, you should specify domain_charset and domain_levellen.
# If not, you sh ould specify domain_dict at the same time.
domain_compbrute=True

# Path to dictionary used for subdomain name scan.
# Either relative path or absolute pat  h can be used.
domain_dict=./dictionary/domain.dict

# Max level of subdomain name to scan.
domain_maxlevel=2

# Charset used for complete brute foce.
# You can use something like a-z or 0-9 etc.
domain_charset=abc

# Length interval of subdomain name each level.
domain_levellen=3-4

# Timeout option for subdomain name scan.
# It specifies the time that a request to target subdomain name should 
# wait before it get response.
domain_timeout=30


[Host Scan]
# Do host scan on target.
enable_host_scan=False


[Directory Scan]
# Do directory and file scan on target.
enable_dir_scan=False


[Web Vul Scan]
#
enable_web_vul_scan=False


[Host Vul Scan]
#
enable_host_vul_scan=False


# [Sql Injection Scan]

# [...]






