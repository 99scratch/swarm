# Config file for swarm
[Target]
# Target URL, IP address or network segment, 
# separated by blank (eg: baidu.com 127.0.0.0/24 192.168.1.5)
# target=
target=

# File that contains target list, one target per line.
# Either relative path or absolute path can be used.
target_file=


[Swarm]
# Slave hosts which runs swarm-s to complete target task. 
# They should listen on target port to be waken up by giving a shell when request comes.
# if so, set this option with both address and port, separated by blank.
# (eg: 192.168.1.2:13110 192.168.1.3:13111)
# If you don't need to waken slave hosts to run swarm-s, 
# set it without port just like the target and set waken_cmd option to null at the same time.
swarm=

# File that contains slave list, one host per line.
# Either relative path or absolute path can be used.
swarm_file=192.168.7.254:9191

# Command to waken up slave hosts, make sure "ARGS" will be argument pass to swarm-s.
# null if swarm-s on slave host need not to be waken up
waken_cmd=python swarm-s.py ARGS

# Seconds to wait before connection to swarm getting response.
timeout=30

# Master address which should be reachable by all slave hosts.
m_addr=192.168.7.26

# Listen port on master host to distribute task.
m_port=13110

# Listen port on slave host to receive command from master.
s_port=9090

# Auth key between master and slave hosts.
authkey=auth

# Synchronize data like dictionary and vulnerability database etc. 
# This option has to be provided if data in local has been updated, 
# or slave host may fail to complete tasks.
sync_data=False


[Output]
# Record log into target file. 
logfile=./swarm.log

# Output more verbose.
verbose=True

# Disable colorful log output.
disable_col=False

#
# result_format=1


[Common]
# Number of process running on slave host.
# Use 0 to use number of cpu cores as process num.
# Task will be decomposed into subtasks and One process will do one subtask at one time.
process_num=0

# Number of threads running on slave host.
# Multiple threads are used when swarm try to run subtask.
thread_num=30


[Domain Scan]
# Do subdomain scan on target.
enable_domain_scan=False

# Use complete brute force without dictionary on target.
# If this option is set, you should specify domain_charset and domain_levellen.
# If not, you sh ould specify domain_dict at the same time.
domain_compbrute=True

# Path to dictionary used for subdomain name scan.
# Either relative path or absolute pat  h can be used.
domain_dict=./dictionary/domain.dict

# Max level of subdomain name to scan.
domain_maxlevel=2

# Charset used for complete brute foce.
# You can use something like a-z or 0-9 etc.
domain_charset=abcd

# Length interval of subdomain name each level.
domain_levellen=3-4

# Timeout option for subdomain name scan.
# It specifies the time that a request to target subdomain name should 
# wait before it get response.
domain_timeout=30


[Host Scan]
# Do host scan on target.
enable_host_scan=False

# Do port status scan on target.
enbale_port_scan=False

# Post list wait for port status scan.
# Support both interval format like 1-1023 and port list format like '80|443|3306|1024-2048'
host_port_list=1-65535


[Directory Scan]
# Do directory and file scan on target.
enable_dir_scan=False

# Enable crawler to scan directories and files.
# Crawler will run after doing dictionary brute force or complete brute force.
dir_enable_crawler=False

# Crawler will use these as seed. Separated by '|'.
dir_crawl_seed=index.php|index.html

# HTTP Port on target host which scanner will send request to.
# Support both interval format like 1-1023 and port list format like '80|443|3306|1024-2048'.
# Scanner will do directory and file scan on each port after doing web server scan.
dir_http_port=80

# HTTPS PORT on target host which scanner will send request to.
# Support both interval format like 1-1023 and port list format like '80|443|3306|1024-2048'.
# Scanner will do directory and file scan on each port after doing web server scan.
dir_https_port=

# Wether use brute force (dictionary or complete brute force) to scan directories and files.
dir_enable_brute=True

# Use complete brute force without dictionary on target.
# If this option is set, you should specify dir_charset and dir_len.
# If not, you sh ould specify dir_dict at the same time.
dir_compbrute=True

# Charset used for complete brute foce.
# You can use something like a-z or 0-9 etc. (eg:A-Z123456)
dir_charset=jncx

# Length interval of directory and file in complete brute force. 
dir_len=1-5

# Path to dictionary used for directory and file scan.
# Either relative path or absolute path can be used.
dir_dict=./dictionary/dir.dict

# Max depth in directory and file scan.
# It dicedes when a directory has been scaned whether to scan content in it.
# Use 0 to indicate scanner to scan content in any directory once it is found.
dir_max_depth=0

# Timeout option for subdomain name scan.
dir_timeout=30

# Any match in these strings include in response content represent that target 
# directory or file doesn't exist, separated by '|'.
dir_not_exist=404|not found|nothing

# This option used in brute force. If this option is set, scanner will use HEAD method
# to scan target. It should be faster than GET method in this way but it may report 
# directory or file which does not exist actually. 
dir_quick_scan=True


[Web Vul Scan]
#
enable_web_vul_scan=False


[Host Vul Scan]
#
enable_host_vul_scan=False


# [Sql Injection Scan]

# [...]






